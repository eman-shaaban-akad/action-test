name: Build

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: manutdidentitysite

jobs:

  build-and-push:
    name: Builds the code and pushes a docker image to ECR

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Get current version
        id: version
        run: echo "::set-output name=current::$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER"

      - name: Build image
        run: |
           echo $VERSION
           docker build . --build-arg dllversion=$VERSION -t $IMAGE_NAME --file src/manutd.identity.site/Dockerfile
        env:
          VERSION: ${{ steps.version.outputs.current }}

      - name: Configure Stage AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_IDSTG }}
          aws-secret-access-key: ${{ secrets. AWS_SECRET_ACCESS_KEYSTG }}
          aws-region: eu-west-1

      - name: Login to Stage Amazon ECR
        id: login-ecr-stage
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Push image
        
        run: |
          IMAGE_ID=$ECR_REGISTRY/$ECR_REPOSITORY
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          
          echo Pushing image
          docker push --all-tags $IMAGE_ID
        env:
          VERSION: ${{ steps.version.outputs.current }}
          ECR_REGISTRY: ${{ steps.login-ecr-stage.outputs.registry }}
          ECR_REPOSITORY: idm

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.STADION_BOT_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.current }}
          release_name: Release v${{ steps.version.outputs.current }}
          body: |
            TBC - Update 
          draft: false
          prerelease: true
